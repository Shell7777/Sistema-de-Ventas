@model List<WebApplication3.Models.Clases.Articulo>
@{
    ViewBag.Title = "Create";
}
   
<div class="row">
    <div class="col">

        <h2>Carrito</h2>
        <form action="/Venta/Create" method="post">

            <div class="alert alert-secondary">
                <label>Usuario:</label>
                <!--<input hidden name="idcliente" value="5">Juanito Valdez-->
                <div class="row">
                    <div class="col">
                        <label>Comprobante </label>
                        <select name="tipo_comprobante" class="form-control">
                            <option value="">-----------</option>
                            <option @(ViewBag.comprobante=="RUC"?"selected":"") value="RUC">RUC</option>
                            <option @(ViewBag.comprobante=="DNI"?"selected":"") value="DNI">DNI</option>
                        </select>
                        <label style="color:red">@Html.ValidationMessage("tipo_comprobante")</label>
                    </div>
                    <div class="col">
                        <div class="form-group">
                            <label>Numero de comprobante</label>
                            <input type="text" name="num_comprobante" value="@ViewBag.numero" class="form-control" placeholder="Numero de comprobante">
                            <label style="color:red">@Html.ValidationMessage("num_comprobante")</label>
                        </div>
                    </div>
                </div>
                <div id="request-store-products" class="container ">
                    <label>Usted no agrego nada </label>

                    <label style="color:red">@Html.ValidationMessage("lista")</label>
                </div>

                <button class="btn btn-primary  btn-lg  " name="enviar">Enviar</button>
            </div>
        </form>

    </div>
    <div class="col">

        <h2>Lista de Productos</h2>
        <table class="table table-hover">
            <thead>
                <tr>
                    <td>Nombre</td>
                    <td>Precio</td>
                    <td>Stock</td>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.nombre</td>
                        <td>@item.precio_venta</td>
                        <td>@item.stock</td>
                        <td><button id="@item.id" data-nombre="@item.nombre" data-stock="@item.stock" class="add btn btn-warning ">Agregar </button></td>

                    </tr>
                }
            </tbody>
        </table>
    </div>

</div>


<div style="background-color:teal; width:100px" ;height ="100px"></div>
<hr />


<script>

    let products = []

    function add_Div(products) {
        
        let valorHtml = "";
        for (let item=0; item < products.length ; item++) {
            
            valorHtml += `
            <div class="alert alert-primary row ">
                <div class="col col-5">
                    <span>${products[item].nombre}</span>  
                </div>   
                <div class="col col-4">
                    <a class="btn btn btn-primary" onclick="add_productos_of_List(${item})" > + </a>
                    <label>${products[item].cantidad}</label>
                    <a class="btn btn btn-secondary text-white" onclick="substrackting_productos_of_List(${item})"> - </a>        
                    </div>
                <div class="col col-3">
                    <a class="btn btn btn-danger text-white" onclick="delete_productos_of_List  (${item})"> Eliminar </a>
                    <input hidden name="detalle_venta[${item}].idarticulo" value="${products[item].id}" />
                    <input hidden name="detalle_venta[${item}].cantidad" value="${products[item].cantidad}" />
                </div>
            </div>`
                
        }

        $("#request-store-products").html(valorHtml)
        

    }
    function substrackting_productos_of_List(numero_de_orden_del_array) {
        products[numero_de_orden_del_array].cantidad > 0
            ? products[numero_de_orden_del_array].cantidad -= 1
            : products[numero_de_orden_del_array].cantidad = 0

        add_Div(products);

    }
    function add_productos_of_List(numero_de_orden_del_array) {
        let data = new FormData()
        fetch(`/Venta/ReturnStock_Product?id=${products[numero_de_orden_del_array].id}`)
            .then(function (response) {
                return (response.text())
            })
            .then(function (stockDelServidorProducto) {
                if (parseInt(stockDelServidorProducto) > products[numero_de_orden_del_array].cantidad) {
                    products[numero_de_orden_del_array].cantidad++;
                    add_Div(products);
                }
            })       
    }
    function delete_productos_of_List(numero_de_orden_del_array) {
        products.splice(numero_de_orden_del_array, 1);
        add_Div(products);
    }
    function verificar(id,name,max_count) {
            var existe = false
            for (let item of products) {
                if (id == item.id) {
                    existe = true
                    if (item.stock > item.cantidad) item.cantidad++ 
                }
            }
            if (!existe) {
                
                products.push(
                    {
                        id: id, nombre: name, cantidad: 1, stock: max_count
                    
                    }
                )    
            } 
            

        }
    $(".add").click(function () {
            let nombre = ($(this).attr("data-nombre"))
            let id = $(this).attr("id")
            let stock = $(this).attr("data-stock")
            verificar(id, nombre, stock)
            add_Div(products)
          })

</script>


